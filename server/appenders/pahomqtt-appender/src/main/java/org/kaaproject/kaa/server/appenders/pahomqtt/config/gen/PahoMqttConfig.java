/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.kaaproject.kaa.server.appenders.pahomqtt.config.gen;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class PahoMqttConfig extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PahoMqttConfig\",\"namespace\":\"org.kaaproject.kaa.server.appenders.pahomqtt.config.gen\",\"fields\":[{\"name\":\"host\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"displayName\":\"Broker Host\",\"by_default\":\"localhost\"},{\"name\":\"port\",\"type\":\"int\",\"displayName\":\"Broker Port\",\"by_default\":1883},{\"name\":\"ssl\",\"type\":\"boolean\",\"displayName\":\"Use SSL\",\"by_default\":\"false\"},{\"name\":\"verifySslCert\",\"type\":\"boolean\",\"displayName\":\"Validate SSL Certificate\",\"by_default\":\"false\"},{\"name\":\"username\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"displayName\":\"Username\"},{\"name\":\"password\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"displayName\":\"Password\",\"inputType\":\"password\"},{\"name\":\"qos\",\"type\":\"int\",\"displayName\":\"Qos\",\"maxLength\":10,\"by_default\":3},{\"name\":\"clientId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"displayName\":\"Client Id\",\"maxLength\":400,\"by_default\":\"DefaultClient-ID\"},{\"name\":\"mqtttopic\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"displayName\":\"Mqtt Topic\",\"maxLength\":400,\"by_default\":\"home/kaa/topic\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
   private java.lang.String host;
   private int port;
   private boolean ssl;
   private boolean verifySslCert;
   private java.lang.String username;
   private java.lang.String password;
   private int qos;
   private java.lang.String clientId;
   private java.lang.String mqtttopic;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use {@link \#newBuilder()}. 
   */
  public PahoMqttConfig() {}

  /**
   * All-args constructor.
   */
  public PahoMqttConfig(java.lang.String host, java.lang.Integer port, java.lang.Boolean ssl, java.lang.Boolean verifySslCert, java.lang.String username, java.lang.String password, java.lang.Integer qos, java.lang.String clientId, java.lang.String mqtttopic) {
    this.host = host;
    this.port = port;
    this.ssl = ssl;
    this.verifySslCert = verifySslCert;
    this.username = username;
    this.password = password;
    this.qos = qos;
    this.clientId = clientId;
    this.mqtttopic = mqtttopic;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return host;
    case 1: return port;
    case 2: return ssl;
    case 3: return verifySslCert;
    case 4: return username;
    case 5: return password;
    case 6: return qos;
    case 7: return clientId;
    case 8: return mqtttopic;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: host = (java.lang.String)value$; break;
    case 1: port = (java.lang.Integer)value$; break;
    case 2: ssl = (java.lang.Boolean)value$; break;
    case 3: verifySslCert = (java.lang.Boolean)value$; break;
    case 4: username = (java.lang.String)value$; break;
    case 5: password = (java.lang.String)value$; break;
    case 6: qos = (java.lang.Integer)value$; break;
    case 7: clientId = (java.lang.String)value$; break;
    case 8: mqtttopic = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'host' field.
   */
  public java.lang.String getHost() {
    return host;
  }

  /**
   * Sets the value of the 'host' field.
   * @param value the value to set.
   */
  public void setHost(java.lang.String value) {
    this.host = value;
  }

  /**
   * Gets the value of the 'port' field.
   */
  public java.lang.Integer getPort() {
    return port;
  }

  /**
   * Sets the value of the 'port' field.
   * @param value the value to set.
   */
  public void setPort(java.lang.Integer value) {
    this.port = value;
  }

  /**
   * Gets the value of the 'ssl' field.
   */
  public java.lang.Boolean getSsl() {
    return ssl;
  }

  /**
   * Sets the value of the 'ssl' field.
   * @param value the value to set.
   */
  public void setSsl(java.lang.Boolean value) {
    this.ssl = value;
  }

  /**
   * Gets the value of the 'verifySslCert' field.
   */
  public java.lang.Boolean getVerifySslCert() {
    return verifySslCert;
  }

  /**
   * Sets the value of the 'verifySslCert' field.
   * @param value the value to set.
   */
  public void setVerifySslCert(java.lang.Boolean value) {
    this.verifySslCert = value;
  }

  /**
   * Gets the value of the 'username' field.
   */
  public java.lang.String getUsername() {
    return username;
  }

  /**
   * Sets the value of the 'username' field.
   * @param value the value to set.
   */
  public void setUsername(java.lang.String value) {
    this.username = value;
  }

  /**
   * Gets the value of the 'password' field.
   */
  public java.lang.String getPassword() {
    return password;
  }

  /**
   * Sets the value of the 'password' field.
   * @param value the value to set.
   */
  public void setPassword(java.lang.String value) {
    this.password = value;
  }

  /**
   * Gets the value of the 'qos' field.
   */
  public java.lang.Integer getQos() {
    return qos;
  }

  /**
   * Sets the value of the 'qos' field.
   * @param value the value to set.
   */
  public void setQos(java.lang.Integer value) {
    this.qos = value;
  }

  /**
   * Gets the value of the 'clientId' field.
   */
  public java.lang.String getClientId() {
    return clientId;
  }

  /**
   * Sets the value of the 'clientId' field.
   * @param value the value to set.
   */
  public void setClientId(java.lang.String value) {
    this.clientId = value;
  }

  /**
   * Gets the value of the 'mqtttopic' field.
   */
  public java.lang.String getMqtttopic() {
    return mqtttopic;
  }

  /**
   * Sets the value of the 'mqtttopic' field.
   * @param value the value to set.
   */
  public void setMqtttopic(java.lang.String value) {
    this.mqtttopic = value;
  }

  /** Creates a new PahoMqttConfig RecordBuilder */
  public static org.kaaproject.kaa.server.appenders.pahomqtt.config.gen.PahoMqttConfig.Builder newBuilder() {
    return new org.kaaproject.kaa.server.appenders.pahomqtt.config.gen.PahoMqttConfig.Builder();
  }
  
  /** Creates a new PahoMqttConfig RecordBuilder by copying an existing Builder */
  public static org.kaaproject.kaa.server.appenders.pahomqtt.config.gen.PahoMqttConfig.Builder newBuilder(org.kaaproject.kaa.server.appenders.pahomqtt.config.gen.PahoMqttConfig.Builder other) {
    return new org.kaaproject.kaa.server.appenders.pahomqtt.config.gen.PahoMqttConfig.Builder(other);
  }
  
  /** Creates a new PahoMqttConfig RecordBuilder by copying an existing PahoMqttConfig instance */
  public static org.kaaproject.kaa.server.appenders.pahomqtt.config.gen.PahoMqttConfig.Builder newBuilder(org.kaaproject.kaa.server.appenders.pahomqtt.config.gen.PahoMqttConfig other) {
    return new org.kaaproject.kaa.server.appenders.pahomqtt.config.gen.PahoMqttConfig.Builder(other);
  }
  
  /**
   * RecordBuilder for PahoMqttConfig instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PahoMqttConfig>
    implements org.apache.avro.data.RecordBuilder<PahoMqttConfig> {

    private java.lang.String host;
    private int port;
    private boolean ssl;
    private boolean verifySslCert;
    private java.lang.String username;
    private java.lang.String password;
    private int qos;
    private java.lang.String clientId;
    private java.lang.String mqtttopic;

    /** Creates a new Builder */
    private Builder() {
      super(org.kaaproject.kaa.server.appenders.pahomqtt.config.gen.PahoMqttConfig.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.kaaproject.kaa.server.appenders.pahomqtt.config.gen.PahoMqttConfig.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.host)) {
        this.host = data().deepCopy(fields()[0].schema(), other.host);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.port)) {
        this.port = data().deepCopy(fields()[1].schema(), other.port);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.ssl)) {
        this.ssl = data().deepCopy(fields()[2].schema(), other.ssl);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.verifySslCert)) {
        this.verifySslCert = data().deepCopy(fields()[3].schema(), other.verifySslCert);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.username)) {
        this.username = data().deepCopy(fields()[4].schema(), other.username);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.password)) {
        this.password = data().deepCopy(fields()[5].schema(), other.password);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.qos)) {
        this.qos = data().deepCopy(fields()[6].schema(), other.qos);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.clientId)) {
        this.clientId = data().deepCopy(fields()[7].schema(), other.clientId);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.mqtttopic)) {
        this.mqtttopic = data().deepCopy(fields()[8].schema(), other.mqtttopic);
        fieldSetFlags()[8] = true;
      }
    }
    
    /** Creates a Builder by copying an existing PahoMqttConfig instance */
    private Builder(org.kaaproject.kaa.server.appenders.pahomqtt.config.gen.PahoMqttConfig other) {
            super(org.kaaproject.kaa.server.appenders.pahomqtt.config.gen.PahoMqttConfig.SCHEMA$);
      if (isValidValue(fields()[0], other.host)) {
        this.host = data().deepCopy(fields()[0].schema(), other.host);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.port)) {
        this.port = data().deepCopy(fields()[1].schema(), other.port);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.ssl)) {
        this.ssl = data().deepCopy(fields()[2].schema(), other.ssl);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.verifySslCert)) {
        this.verifySslCert = data().deepCopy(fields()[3].schema(), other.verifySslCert);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.username)) {
        this.username = data().deepCopy(fields()[4].schema(), other.username);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.password)) {
        this.password = data().deepCopy(fields()[5].schema(), other.password);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.qos)) {
        this.qos = data().deepCopy(fields()[6].schema(), other.qos);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.clientId)) {
        this.clientId = data().deepCopy(fields()[7].schema(), other.clientId);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.mqtttopic)) {
        this.mqtttopic = data().deepCopy(fields()[8].schema(), other.mqtttopic);
        fieldSetFlags()[8] = true;
      }
    }

    /** Gets the value of the 'host' field */
    public java.lang.String getHost() {
      return host;
    }
    
    /** Sets the value of the 'host' field */
    public org.kaaproject.kaa.server.appenders.pahomqtt.config.gen.PahoMqttConfig.Builder setHost(java.lang.String value) {
      validate(fields()[0], value);
      this.host = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'host' field has been set */
    public boolean hasHost() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'host' field */
    public org.kaaproject.kaa.server.appenders.pahomqtt.config.gen.PahoMqttConfig.Builder clearHost() {
      host = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'port' field */
    public java.lang.Integer getPort() {
      return port;
    }
    
    /** Sets the value of the 'port' field */
    public org.kaaproject.kaa.server.appenders.pahomqtt.config.gen.PahoMqttConfig.Builder setPort(int value) {
      validate(fields()[1], value);
      this.port = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'port' field has been set */
    public boolean hasPort() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'port' field */
    public org.kaaproject.kaa.server.appenders.pahomqtt.config.gen.PahoMqttConfig.Builder clearPort() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'ssl' field */
    public java.lang.Boolean getSsl() {
      return ssl;
    }
    
    /** Sets the value of the 'ssl' field */
    public org.kaaproject.kaa.server.appenders.pahomqtt.config.gen.PahoMqttConfig.Builder setSsl(boolean value) {
      validate(fields()[2], value);
      this.ssl = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'ssl' field has been set */
    public boolean hasSsl() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'ssl' field */
    public org.kaaproject.kaa.server.appenders.pahomqtt.config.gen.PahoMqttConfig.Builder clearSsl() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'verifySslCert' field */
    public java.lang.Boolean getVerifySslCert() {
      return verifySslCert;
    }
    
    /** Sets the value of the 'verifySslCert' field */
    public org.kaaproject.kaa.server.appenders.pahomqtt.config.gen.PahoMqttConfig.Builder setVerifySslCert(boolean value) {
      validate(fields()[3], value);
      this.verifySslCert = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'verifySslCert' field has been set */
    public boolean hasVerifySslCert() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'verifySslCert' field */
    public org.kaaproject.kaa.server.appenders.pahomqtt.config.gen.PahoMqttConfig.Builder clearVerifySslCert() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'username' field */
    public java.lang.String getUsername() {
      return username;
    }
    
    /** Sets the value of the 'username' field */
    public org.kaaproject.kaa.server.appenders.pahomqtt.config.gen.PahoMqttConfig.Builder setUsername(java.lang.String value) {
      validate(fields()[4], value);
      this.username = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'username' field has been set */
    public boolean hasUsername() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'username' field */
    public org.kaaproject.kaa.server.appenders.pahomqtt.config.gen.PahoMqttConfig.Builder clearUsername() {
      username = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'password' field */
    public java.lang.String getPassword() {
      return password;
    }
    
    /** Sets the value of the 'password' field */
    public org.kaaproject.kaa.server.appenders.pahomqtt.config.gen.PahoMqttConfig.Builder setPassword(java.lang.String value) {
      validate(fields()[5], value);
      this.password = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'password' field has been set */
    public boolean hasPassword() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'password' field */
    public org.kaaproject.kaa.server.appenders.pahomqtt.config.gen.PahoMqttConfig.Builder clearPassword() {
      password = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'qos' field */
    public java.lang.Integer getQos() {
      return qos;
    }
    
    /** Sets the value of the 'qos' field */
    public org.kaaproject.kaa.server.appenders.pahomqtt.config.gen.PahoMqttConfig.Builder setQos(int value) {
      validate(fields()[6], value);
      this.qos = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'qos' field has been set */
    public boolean hasQos() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'qos' field */
    public org.kaaproject.kaa.server.appenders.pahomqtt.config.gen.PahoMqttConfig.Builder clearQos() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'clientId' field */
    public java.lang.String getClientId() {
      return clientId;
    }
    
    /** Sets the value of the 'clientId' field */
    public org.kaaproject.kaa.server.appenders.pahomqtt.config.gen.PahoMqttConfig.Builder setClientId(java.lang.String value) {
      validate(fields()[7], value);
      this.clientId = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'clientId' field has been set */
    public boolean hasClientId() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'clientId' field */
    public org.kaaproject.kaa.server.appenders.pahomqtt.config.gen.PahoMqttConfig.Builder clearClientId() {
      clientId = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'mqtttopic' field */
    public java.lang.String getMqtttopic() {
      return mqtttopic;
    }
    
    /** Sets the value of the 'mqtttopic' field */
    public org.kaaproject.kaa.server.appenders.pahomqtt.config.gen.PahoMqttConfig.Builder setMqtttopic(java.lang.String value) {
      validate(fields()[8], value);
      this.mqtttopic = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'mqtttopic' field has been set */
    public boolean hasMqtttopic() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'mqtttopic' field */
    public org.kaaproject.kaa.server.appenders.pahomqtt.config.gen.PahoMqttConfig.Builder clearMqtttopic() {
      mqtttopic = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    public PahoMqttConfig build() {
      try {
        PahoMqttConfig record = new PahoMqttConfig();
        record.host = fieldSetFlags()[0] ? this.host : (java.lang.String) defaultValue(fields()[0]);
        record.port = fieldSetFlags()[1] ? this.port : (java.lang.Integer) defaultValue(fields()[1]);
        record.ssl = fieldSetFlags()[2] ? this.ssl : (java.lang.Boolean) defaultValue(fields()[2]);
        record.verifySslCert = fieldSetFlags()[3] ? this.verifySslCert : (java.lang.Boolean) defaultValue(fields()[3]);
        record.username = fieldSetFlags()[4] ? this.username : (java.lang.String) defaultValue(fields()[4]);
        record.password = fieldSetFlags()[5] ? this.password : (java.lang.String) defaultValue(fields()[5]);
        record.qos = fieldSetFlags()[6] ? this.qos : (java.lang.Integer) defaultValue(fields()[6]);
        record.clientId = fieldSetFlags()[7] ? this.clientId : (java.lang.String) defaultValue(fields()[7]);
        record.mqtttopic = fieldSetFlags()[8] ? this.mqtttopic : (java.lang.String) defaultValue(fields()[8]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
